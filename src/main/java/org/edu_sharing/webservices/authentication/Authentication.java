package org.edu_sharing.webservices.authentication;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 4.0.0
 * 2023-01-03T11:03:55.855+01:00
 * Generated source version: 4.0.0
 *
 */
@WebService(targetNamespace = "http://authentication.webservices.edu_sharing.org", name = "Authentication")
@XmlSeeAlso({org.edu_sharing.webservices.types.ObjectFactory.class, ObjectFactory.class})
public interface Authentication {

    @WebMethod
    @RequestWrapper(localName = "authenticateByCAS", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByCAS")
    @ResponseWrapper(localName = "authenticateByCASResponse", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByCASResponse")
    @WebResult(name = "authenticateByCASReturn", targetNamespace = "http://authentication.webservices.edu_sharing.org")
    public org.edu_sharing.webservices.authentication.AuthenticationResult authenticateByCAS(

        @WebParam(name = "username", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String username,
        @WebParam(name = "proxyTicket", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String proxyTicket
    ) throws AuthenticationException_Exception;

    @WebMethod
    @RequestWrapper(localName = "authenticate", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.Authenticate")
    @ResponseWrapper(localName = "authenticateResponse", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateResponse")
    @WebResult(name = "authenticateReturn", targetNamespace = "http://authentication.webservices.edu_sharing.org")
    public org.edu_sharing.webservices.authentication.AuthenticationResult authenticate(

        @WebParam(name = "username", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String username,
        @WebParam(name = "password", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String password
    ) throws AuthenticationException_Exception;

    @WebMethod
    @RequestWrapper(localName = "authenticateByTrustedApp", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByTrustedApp")
    @ResponseWrapper(localName = "authenticateByTrustedAppResponse", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByTrustedAppResponse")
    @WebResult(name = "authenticateByTrustedAppReturn", targetNamespace = "http://authentication.webservices.edu_sharing.org")
    public org.edu_sharing.webservices.authentication.AuthenticationResult authenticateByTrustedApp(

        @WebParam(name = "applicationId", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String applicationId,
        @WebParam(name = "ticket", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String ticket,
        @WebParam(name = "ssoData", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.util.List<org.edu_sharing.webservices.types.KeyValue> ssoData
    ) throws AuthenticationException_Exception;

    @WebMethod
    @RequestWrapper(localName = "authenticateByApp", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByApp")
    @ResponseWrapper(localName = "authenticateByAppResponse", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.AuthenticateByAppResponse")
    @WebResult(name = "authenticateByAppReturn", targetNamespace = "http://authentication.webservices.edu_sharing.org")
    public org.edu_sharing.webservices.authentication.AuthenticationResult authenticateByApp(

        @WebParam(name = "applicationId", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String applicationId,
        @WebParam(name = "username", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String username,
        @WebParam(name = "email", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String email,
        @WebParam(name = "ticket", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String ticket,
        @WebParam(name = "createUser", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        boolean createUser
    ) throws AuthenticationException_Exception;

    @WebMethod
    @RequestWrapper(localName = "checkTicket", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.CheckTicket")
    @ResponseWrapper(localName = "checkTicketResponse", targetNamespace = "http://authentication.webservices.edu_sharing.org", className = "org.edu_sharing.webservices.authentication.CheckTicketResponse")
    @WebResult(name = "checkTicketReturn", targetNamespace = "http://authentication.webservices.edu_sharing.org")
    public boolean checkTicket(

        @WebParam(name = "username", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String username,
        @WebParam(name = "ticket", targetNamespace = "http://authentication.webservices.edu_sharing.org")
        java.lang.String ticket
    ) throws AuthenticationException_Exception;
}
