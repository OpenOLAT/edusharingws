package org.edu_sharing.webservices.render;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-01-04T16:42:50.306+01:00
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "RenderInfoService",
                  wsdlLocation = "classpath:wsdl/RenderInfo.wsdl",
                  targetNamespace = "http://render.webservices.edu_sharing.org")
public class RenderInfoService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://render.webservices.edu_sharing.org", "RenderInfoService");
    public final static QName RenderInfo = new QName("http://render.webservices.edu_sharing.org", "RenderInfo");
    static {
        URL url = RenderInfoService.class.getClassLoader().getResource("wsdl/RenderInfo.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(RenderInfoService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/RenderInfo.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RenderInfoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RenderInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RenderInfoService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public RenderInfoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RenderInfoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RenderInfoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns RenderInfo
     */
    @WebEndpoint(name = "RenderInfo")
    public RenderInfo getRenderInfo() {
        return super.getPort(RenderInfo, RenderInfo.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RenderInfo
     */
    @WebEndpoint(name = "RenderInfo")
    public RenderInfo getRenderInfo(WebServiceFeature... features) {
        return super.getPort(RenderInfo, RenderInfo.class, features);
    }

}
